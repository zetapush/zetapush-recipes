/**
 * Get list of users according to user keys list
 * Returned list wrap user profile in a ad hoc data structure
 * <pre><code>
 * class UserWrapper {
 *   boolean found;
 *   User user;
 * }
 * </code></pre>
 */
macroscript getUserList(
	/** List of userKey */ @NotNull array userKeys
) {
	/** Get user from directory */
	const { users } = zpServiceUserDirectory.userInfo({ userKeys });
	/** Map restult from map to list  */
	var list = [];
	/** Match not found result */
	for userKey in userKeys {
		var user = { userKey };
		if (users[userKey]??) {
			user += users[userKey];
			list += { found: true, user };
		} else {
			list += { found: false, user };
		}
	}
} return {
	list
} on channel __selfName
