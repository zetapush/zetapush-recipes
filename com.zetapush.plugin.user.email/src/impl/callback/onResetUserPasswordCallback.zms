/**
 *
 */
@zpRecipeUser::ResetPasswordListener()
macroscript plugin_user_email__onResetUserPasswordCallback(
	/** */ string token,
	/** */ map user
) {
	trace(plugin_user_email__onResetUserPasswordCallback.name, { token, user });
	const { value: config } = await zpRecipeConfig::getObjectConfig({
		id: PLUGIN_USER_EMAIL__RESET_PASSWORD
	});
	trace(plugin_user_email__onResetUserPasswordCallback.name, config);
	/** Generate template for email */
	const html = zpServiceTemplateEngine.evaluate({
		data: { config, token, user },
		name: config.template
	});
	trace(plugin_user_email__onResetUserPasswordCallback.name, html);
	/** Send mail */
	zpServiceMailSender.send({
		html: html.content,
		subject: config.subject,
		to: [user.email]
	});
}
