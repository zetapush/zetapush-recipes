/**
 *
 */
macroscript core_room__setRoomPermissionsByServices(
	/** Valid room room id */@ValidRoomId string id,
	/** File storage path */ @NotNull string path,
	/** Group service */ @NotNull service<groups> zpServiceGroups,
	/** Storage service */ @NotNull service<gda> zpServiceGda,
	/** Filesystem service */ @NotNull service<zpfs_hdfs> zpServiceFileSystem
) {
	trace(#core_room__setRoomPermissionsByServices, { id, path, userKey: __userKey });
	/** Grant list and push to the group for the stack */
	zpServiceGroups.mgrant({
		actions: [Verb_gda_get, Verb_gda_getCells, Verb_gda_inc, Verb_gda_list, Verb_gda_put, Verb_gda_puts, Verb_gda_range, Verb_gda_removeRange],
		group: id,
		resource: str:join(':', zpServiceGda, __userKey, TABLE_ROOM_STORAGE)
	});
	/** Grant grant to the group for the stack */
	zpServiceGroups.mgrant({
		actions: ['GRANT'],
		group: id,
		resource: str:join(':', __userKey, id)
	});
	/** Create file storage file path */
	zpServiceFileSystem.mkdir({
		parents: true,
		folder: path
	});
	/** Grant grant to the group for the stack */
	zpServiceGroups.mgrant({
		actions: [Verb_zpfs_hdfs_newUploadUrl],
		group: id,
		resource: str:join(':', zpServiceFileSystem, __userKey, path)
	});
	/** Grant grant to the group for the stack */
	zpServiceGroups.grant({
		action: Verb_zpfs_hdfs_newFile,
		group: id,
		resource: '*'
	});
} on channel __selfName
