/**
 *
 */
macroscript core_room__purgeRoomMessageListByService(
	/** Room room object */ @NotNull Room room,
	/** Message storage container id */ @ValidRoomId string container,
	/** Storage Service */ @NotNull service<gda> zpService
) {
	/** Define range start and stop */
	const { start, stop } = usr:core_room__range(container);
	trace(#core_room__purgeRoomMessageListByService, { start, stop });
	/** Retreive message for a specific range */
	zpService.removeRange({
		columns: [{
			column: COLUMN_STORAGE_AUTHOR
		}, {
			column: COLUMN_STORAGE_TYPE
		}, {
			column: COLUMN_STORAGE_VALUE
		}, {
			column: COLUMN_STORAGE_CREATED_AT
		}, {
			column: COLUMN_STORAGE_UPDATED_AT
		}, {
			column: COLUMN_STORAGE_METADATA
		}, {
			column: COLUMN_STORAGE_READERS
		}, {
			column: COLUMN_STORAGE_TARGETS
		}],
		start,
		table: TABLE_ROOM_STORAGE,
		stop,
		owner: room.owner
	});
	/** Execute all registered macros */
	zpRecipeUtils::zpServiceTrigger.trigger({
		event: EVENT__PURGE_ROOM,
		data: { container, room }
	});
} return {
	container, room
} on channel __selfName
